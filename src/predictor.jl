# # PREDICTOR
#
# Sub-system of NeilWarnckAI which aims to make predictions about fixture
# scorelines, individual player points hauls and more...
#
# ## FUNCTIONALITY
#
# At gameweek[i] the following 'system' should run once executing the
# following tasks in order:
#
# 1. fetch new data generated by gameweek[i-1] |> target new season dir.
#	- single api call
#	- consider all sources: football-data.co.uk, fpl.co.uk, github...
# 2. clean/wrangle new data to homogenize to useable format
#	- call to organisedata(incoming_data) -> adds to existing database
#	- sub-calls to organise: score pred. data, player point data, etc.
# 3. move saved model parameters to `modelarchives/` directory
#	- move model parameter file (.h5) to archive dir
#	- check that the old models have their test scores logged
# 4. train new models on new data sets
#	- call to: trainscorepredictor(...)
#	- call to: trainplayerpointspredictor(...)
# 5. validate new models appropriately for new data
# 6. check accuracy of models:
#	- generate test scores for new models
#	- compare old model test score to new model test scores
#	- switch in/out old/new models appropriately
# 7. generate new score_prediction[i]
#	- generate for entire season fixturs for points projection
#	- later we will be able to analyse the progression and convergence
#	- log/store gameweek score predictions
# 8. generate new points_predictions[i] for all players
#	- generate only for gameweek[i]
#	- log/store points_prediction[i]
#
# Once this entire process has been completed, the next stage, which is
# the optimisation of the team selection begins.
# This process takes places in a different sub-routine called: `OPTIMISER`,
# which requires the generated results from PREDICTOR to run.

include("dataExtractor.jl")
include("dataFormatter.jl")

# main script

names_list = playernames("./data/2016-17/")
player_gw = ioseparate("./data/2016-17/", (names_list[!, :Name])[2])
